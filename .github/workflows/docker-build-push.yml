name: build and push Docker image

on:
    workflow_call:
        inputs:
            image-name:
                required: true
                type: string
            base-dir:
                required: false
                type: string
                default: .
        outputs:
            tags:
                description: The tag of the built image
                value: ${{ jobs.build.outputs.tags }}


jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        outputs:
            tags: ${{ steps.meta.outputs.tags }}
        steps:
        - name: Check out
          uses: actions/checkout@v2  

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v3
          with:
            images: "tomcsojn/${{ inputs.image-name }}"
            tags: |
              type=raw,value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}
              type=raw,value=${{ github.ref_name }}-${{ github.sha }},enable=${{ github.event_name != 'release' }}
            flavor: latest=${{ github.event_name == 'release' }}

        - name: Login to DockerHub
          if: github.event_name != 'pull_request'
          uses: docker/login-action@v1
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Prepare build args
          id: prepare-build-args
          run: |
            echo "build_args<<EOF" >> $GITHUB_OUTPUT
            echo '${{ secrets.FRONTEND_BUILD_SECRETS }}' | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ${{ inputs.base-dir }}
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args:  ${{ steps.prepare-build-args.outputs.build_args }}