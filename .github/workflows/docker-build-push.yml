name: build and push Docker image

on:
    workflow_call:
        inputs:
            image-name:
                required: true
                type: string
            base-dir:
                required: false
                type: string
                default: .
        outputs:
            tags:
                description: The tag of the built image
                value: ${{ jobs.build.outputs.tags }}


jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        outputs:
            tags: ${{ steps.meta.outputs.tags }}
        steps:
        - name: Check out
          uses: actions/checkout@v2  

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v3
          with:
            images: "tomcsojn/${{ inputs.image-name }}"
            tags: |
              type=raw,value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}
              type=raw,value=${{ github.ref_name }}-${{ github.sha }},enable=${{ github.event_name != 'release' }}
            flavor: latest=${{ github.event_name == 'release' }}

        - name: Login to DockerHub
          if: github.event_name != 'pull_request'
          uses: docker/login-action@v1
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Create build args file
          run: |
            # Assign the secret safely into a variable (multiline preserved)
            FRONTEND_BUILD_SECRETS="${FRONTEND_BUILD_SECRETS}"

            if [ -n "$FRONTEND_BUILD_SECRETS" ] && \
              [ -n "$(echo "$FRONTEND_BUILD_SECRETS" | grep -v '^\s*$')" ]; then
              {
                echo 'build_args<<EOF'
                echo "$FRONTEND_BUILD_SECRETS" | grep -v '^\s*$'
                echo 'EOF'
              } >> "$GITHUB_OUTPUT"
              echo "Build args file created successfully"
              echo "Content of GITHUB_OUTPUT file:"
              cat "$GITHUB_OUTPUT"
            else
              echo "No build args file created - FRONTEND_BUILD_SECRETS is empty"
            fi
          env:
            FRONTEND_BUILD_SECRETS: ${{ secrets.FRONTEND_BUILD_SECRETS }}

        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ${{ inputs.base-dir }}
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args:  ${{ steps.prepare-build-args.outputs.build_args }}